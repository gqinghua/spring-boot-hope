{
  "functions": [
    {
      "name": "+",
      "describe": "加法运算",
      "function": "",
      "paramSizeType": "range",
      "paramMinSize": 2,
      "paramMaxSize": 9999,
      "paramSplit": "+",
      "params": [
        {
          "checkRegexType": "number",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "-",
      "describe": "减法运算",
      "function": "",
      "paramSizeType": "range",
      "paramMinSize": 2,
      "paramMaxSize": 9999,
      "paramSplit": "-",
      "params": [
        {
          "checkRegexType": "number",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "*",
      "describe": "乘法运算",
      "function": "",
      "paramSizeType": "range",
      "paramMinSize": 2,
      "paramMaxSize": 9999,
      "paramSplit": "*",
      "params": [
        {
          "checkRegexType": "number",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "/",
      "describe": "除法运算",
      "function": "",
      "paramSizeType": "range",
      "paramMinSize": 2,
      "paramMaxSize": 9999,
      "paramSplit": "/",
      "params": [
        {
          "checkRegexType": "number",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "power",
      "describe": "求数的n次方",
      "function": "POWER(#1,#2)",
      "paramSizeType": "fixed",
      "paramMinSize": 2,
      "paramMaxSize": 2,
      "params": [
        {
          "checkRegexType": "number",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "percentage",
      "describe": "百分比",
      "function": "ROUND(#1/100,2)",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "number",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "count",
      "describe": "计数函数",
      "function": "COUNT(#1)",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "all",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "count_distinct",
      "describe": "计数函数",
      "function": "COUNT(DISTINCT #1)",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "all",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "max",
      "describe": "求最大值",
      "function": "MAX(#1)",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "number",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "min",
      "describe": "求最小值",
      "function": "MIN(#1)",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "number",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "sum",
      "describe": "求和",
      "function": "SUM(#1)",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "number",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "avg",
      "describe": "求平均值",
      "function": "AVG(#1)",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "number",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "abs",
      "function": "ABS(#1)",
      "describe": "求绝对值",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "number",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "mod",
      "function": "MOD(#1,#2)",
      "describe": "取余",
      "paramSizeType": "fixed",
      "paramMinSize": 2,
      "paramMaxSize": 2,
      "params": [
        {
          "checkRegexType": "number",
          "checkMsg": "参数必须为数字"
        },
        {
          "checkRegexType": "number",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "ceil",
      "function": "CEIL(#1)",
      "describe": "向上取整",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "number",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "floor",
      "function": "FLOOR(#1)",
      "describe": "向下取整",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "number",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "round",
      "function": "ROUND",
      "describe": "四舍五入",
      "paramSizeType": "range",
      "paramMinSize": 1,
      "paramMaxSize": 2,
      "params": [
        {
          "checkRegexType": "number",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "rand",
      "function": "dbms_random.value",
      "describe": "生成一个随机数值",
      "paramSizeType": "fixed",
      "paramMinSize": 0,
      "paramMaxSize": 0,
      "params": []
    },
    {
      "name": "sign",
      "function": "SIGN(#1)",
      "describe": "参数的符号",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "number",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "length",
      "function": "LENGTH(#1)",
      "describe": "计算字符串长度",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "string",
          "checkMsg": "参数必须为字符串"
        }
      ]
    },
    {
      "name": "concat",
      "function": "CONCAT(#1,#2)",
      "describe": "字符串拼接",
      "paramSizeType": "fixed",
      "paramMinSize": 2,
      "paramMaxSize": 2,
      "params": [
        {
          "checkRegexType": "string",
          "checkMsg": "参数必须为字符串"
        }
      ]
    },
    {
      "name": "upper",
      "function": "UPPER(#1)",
      "describe": "字符串转大写",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "string",
          "checkMsg": "参数必须为字符串"
        }
      ]
    },
    {
      "name": "lower",
      "function": "LOWER(#1)",
      "describe": "字符串转小写",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "string",
          "checkMsg": "参数必须为字符串"
        }
      ]
    },
    {
      "name": "trim",
      "function": "TRIM(#1)",
      "describe": "删除字符串两侧的空格",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "string",
          "checkMsg": "参数必须为字符串"
        }
      ]
    },
    {
      "name": "ltrim",
      "function": "LTRIM(#1)",
      "describe": "删除左侧空字符串",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "string",
          "checkMsg": "参数必须为字符串"
        }
      ]
    },
    {
      "name": "rtrim",
      "function": "RTRIM(#1)",
      "describe": "删除右侧空字符串",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "string",
          "checkMsg": "参数必须为字符串"
        }
      ]
    },
    {
      "name": "replace",
      "function": "REPLACE(#1,#2,#3)",
      "describe": "字符串替换",
      "paramSizeType": "fixed",
      "paramMinSize": 3,
      "paramMaxSize": 3,
      "params": [
        {
          "checkRegexType": "string",
          "checkMsg": "参数必须为字符串"
        },
        {
          "checkRegexType": "string",
          "checkMsg": "参数必须为字符串"
        },
        {
          "checkRegexType": "string",
          "checkMsg": "参数必须为字符串"
        }
      ]
    },
    {
      "name": "substr",
      "function": "SUBSTR(#1,#2,#3)",
      "describe": "字符串截取",
      "paramSizeType": "fixed",
      "paramMinSize": 3,
      "paramMaxSize": 3,
      "params": [
        {
          "checkRegexType": "string",
          "checkMsg": "参数必须为字符串"
        },
        {
          "checkRegexType": "integer",
          "checkMsg": "参数必须为整数"
        },
        {
          "checkRegexType": "integer",
          "checkMsg": "参数必须为整数"
        }
      ]
    },
    {
      "name": "lsubstr",
      "function": "SUBSTR(#1,1,#2)",
      "describe": "从左侧截取字符串",
      "paramSizeType": "fixed",
      "paramMinSize": 2,
      "paramMaxSize": 2,
      "params": [
        {
          "checkRegexType": "string",
          "checkMsg": "参数必须为字符串"
        },
        {
          "checkRegexType": "integer",
          "checkMsg": "参数必须为整数"
        }
      ]
    },
    {
      "name": "rsubstr",
      "function": "SUBSTR(#1,-1,#2)",
      "describe": "从右侧截取字符串",
      "paramSizeType": "fixed",
      "paramMinSize": 2,
      "paramMaxSize": 2,
      "params": [
        {
          "checkRegexType": "string",
          "checkMsg": "参数必须为字符串"
        },
        {
          "checkRegexType": "integer",
          "checkMsg": "参数必须为整数"
        }
      ]
    },
    {
      "name": "instr",
      "function": "INSTR(#1,#2)",
      "describe": "查找字符串位置",
      "paramSizeType": "fixed",
      "paramMinSize": 2,
      "paramMaxSize": 2,
      "params": [
        {
          "checkRegexType": "string",
          "checkMsg": "参数必须为字符串"
        },
        {
          "checkRegexType": "string",
          "checkMsg": "参数必须为字符串"
        }
      ]
    },
    {
      "name": "to_char",
      "function": "TO_CHAR(#1,#2)",
      "describe": "日期转字符",
      "paramSizeType": "fixed",
      "paramMinSize": 2,
      "paramMaxSize": 2,
      "params": [
        {
          "checkRegexType": "string",
          "checkMsg": "参数必须为字符串"
        },
        {
          "checkRegexType": "string",
          "checkMsg": "参数必须为字符串"
        }
      ]
    },
    {
      "name": "timestampToChar",
      "function": "TO_CHAR(#1,#2)",
      "describe": "时间戳转字符",
      "paramSizeType": "fixed",
      "paramMinSize": 2,
      "paramMaxSize": 2,
      "params": [
        {
          "checkRegexType": "string",
          "checkMsg": "参数必须为字符串"
        },
        {
          "checkRegexType": "string",
          "checkMsg": "参数必须为字符串"
        }
      ]
    },
    {
      "name": "to_date",
      "function": "TO_DATE(#1,#2)",
      "describe": "字符串转日期",
      "paramSizeType": "fixed",
      "paramMinSize": 2,
      "paramMaxSize": 2,
      "params": [
        {
          "checkRegexType": "",
          "checkMsg": ""
        },
        {
          "checkRegexType": "string",
          "checkMsg": "参数必须为字符串"
        }
      ]
    },
    {
      "name": "toTimestamp",
      "function": "TO_DATE(#1,#2)",
      "describe": "时间戳串转日期",
      "paramSizeType": "fixed",
      "paramMinSize": 2,
      "paramMaxSize": 2,
      "params": [
        {
          "checkRegexType": "",
          "checkMsg": ""
        },
        {
          "checkRegexType": "string",
          "checkMsg": "参数必须为字符串"
        }
      ]
    },
    {
      "name": "year_begin",
      "function": "trunc(#1, 'yyyy' )",
      "describe": "年初",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": []
    },
    {
      "name": "year_end",
      "function": "add_months( trunc(#1, 'yyyy' ), 12 ) - 1",
      "describe": "年末",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": []
    },
    {
      "name": "quarter_begin",
      "function": "trunc(#1, 'Q' )",
      "describe": "季初",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": []
    },
    {
      "name": "quarter_end",
      "function": "add_months( trunc(#1, 'Q' ), 3 )-1",
      "describe": "季末",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": []
    },
    {
      "name": "month_begin",
      "function": "trunc(#1, 'MM' )",
      "describe": "月初",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": []
    },
    {
      "name": "month_end",
      "function": "last_day(#1)",
      "describe": "月末",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": []
    },
    {
      "name": "week_begin",
      "function": "trunc(#1, 'D' ) + 1",
      "describe": "周初",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": []
    },
    {
      "name": "week_end",
      "function": "trunc(#1, 'D' ) + 7",
      "describe": "周末",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": []
    },
    {
      "name": "current_date",
      "function": "SYSDATE",
      "describe": "当前日期",
      "paramSizeType": "fixed",
      "paramMinSize": 0,
      "paramMaxSize": 0,
      "params": []
    },
    {
      "name": "current_timestamp",
      "function": "SYSDATE",
      "describe": "当前日期时间",
      "paramSizeType": "fixed",
      "paramMinSize": 0,
      "paramMaxSize": 0,
      "params": []
    },
    {
      "name": "current_year",
      "function": "to_char(sysdate, 'yyyy' )",
      "describe": "当前年",
      "paramSizeType": "fixed",
      "paramMinSize": 0,
      "paramMaxSize": 0,
      "params": []
    },
    {
      "name": "current_quarter",
      "function": "to_char(sysdate, 'Q')",
      "describe": "当前季度",
      "paramSizeType": "fixed",
      "paramMinSize": 0,
      "paramMaxSize": 0,
      "params": []
    },
    {
      "name": "current_month",
      "function": "to_char(sysdate, 'MM' )",
      "describe": "当前月",
      "paramSizeType": "fixed",
      "paramMinSize": 0,
      "paramMaxSize": 0,
      "params": []
    },
    {
      "name": "current_week",
      "function": "to_char(sysdate, 'iw')",
      "describe": "当前周",
      "paramSizeType": "fixed",
      "paramMinSize": 0,
      "paramMaxSize": 0,
      "params": []
    },
    {
      "name": "current_day",
      "function": "to_char(sysdate, 'dd' )",
      "describe": "当前日",
      "paramSizeType": "fixed",
      "paramMinSize": 0,
      "paramMaxSize": 0,
      "params": []
    },
    {
      "name": "not",
      "function": "case when #1 then 'false' else 'true' end",
      "describe": "取反",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": []
    },
    {
      "name": "e",
      "function": "EXP(1)",
      "describe": "e的值",
      "paramSizeType": "fixed",
      "paramMinSize": 0,
      "paramMaxSize": 0,
      "params": []
    },
    {
      "name": "pi",
      "function": "ACOS(-1)",
      "describe": "pi的值",
      "paramSizeType": "fixed",
      "paramMinSize": 0,
      "paramMaxSize": 0,
      "params": []
    },
    {
      "name": "exp",
      "function": "EXP(#1)",
      "describe": "e的x次方",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "number;integer;bigNumber",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "exp2",
      "function": "POWER(2, #1)",
      "describe": "2的x次方",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "number;integer;bigNumber",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "exp10",
      "function": "POWER(10, #1)",
      "describe": "10的x次方",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "number;integer;bigNumber",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "log",
      "function": "LOG(EXP(1),#1)",
      "describe": "log以e为底的对数值",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "number;integer;bigNumber",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "log2",
      "function": "LOG(2, #1)",
      "describe": "log以2为底的对数值",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "number;integer;bigNumber",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "log10",
      "function": "LOG(10, #1)",
      "describe": "log以10为底的对数值",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "number;integer;bigNumber",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "sqrt",
      "function": "SQRT(#1)",
      "describe": "开平方",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "number;integer;bigNumber",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "cbrt",
      "function": "POWER(#1, 1/3)",
      "describe": "开立方",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "number;integer;bigNumber",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "toString",
      "function": " TO_CHAR(#1) ",
      "describe": "转成字符串",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": []
    },
    {
      "name": "toUInt8OrZero",
      "function": "TRUNC(#1,0)",
      "describe": "转成整数",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "number;integer;bigNumber",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "toDecimal64",
      "function": "ROUND(#1, #2)",
      "describe": "转成小数",
      "paramSizeType": "fixed",
      "paramMinSize": 2,
      "paramMaxSize": 2,
      "params": [
        {
          "checkRegexType": "number;integer;bigNumber",
          "checkMsg": "参数必须为数字"
        },
        {
          "checkRegexType": "number;integer;bigNumber",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "yesterday",
      "function": "TRUNC(SYSDATE - 1)",
      "describe": "昨天",
      "paramSizeType": "fixed",
      "paramMinSize": 0,
      "paramMaxSize": 0,
      "params": []
    },
    {
      "name": "toYear",
      "function": "extract(year from #1)",
      "describe": "年份",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "date;datetime;timestamp;string",
          "checkMsg": "参数必须为日期格式"
        }
      ]
    },
    {
      "name": "toQuarter",
      "function": "TO_CHAR(#1, 'Q')",
      "describe": "季度",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "date;datetime;timestamp;string",
          "checkMsg": "参数必须为日期格式"
        }
      ]
    },
    {
      "name": "toMonth",
      "function": "EXTRACT(MONTH FROM #1)",
      "describe": "月",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "date;datetime;timestamp;string",
          "checkMsg": "参数必须为日期"
        }
      ]
    },
    {
      "name": "toDayOfWeek",
      "function": "TO_CHAR(#1 + NUMTODSINTERVAL(-1,'DAY'),'D')",
      "describe": "周天数",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "date;datetime;timestamp;string",
          "checkMsg": "参数必须为日期"
        }
      ]
    },
    {
      "name": "toWeek",
      "function": "to_char(#1 ,'ww')",
      "describe": "周数",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "date;datetime;timestamp;string",
          "checkMsg": "参数必须为日期"
        }
      ]
    },
    {
      "name": "toDayOfMonth",
      "function": "TO_NUMBER(TO_CHAR(#1,'dd'))",
      "describe": "月天数",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "date;datetime;timestamp;string",
          "checkMsg": "参数必须为日期"
        }
      ]
    },
    {
      "name": "toHour",
      "function": "TO_NUMBER(TO_CHAR(#1,'hh24'))",
      "describe": "小时",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "datetime;timestamp;time;string",
          "checkMsg": "参数必须为时间格式"
        }
      ]
    },
    {
      "name": "toMinute",
      "function": "TO_NUMBER(TO_CHAR(#1, 'MI'))",
      "describe": "分钟",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "datetime;timestamp;time;string",
          "checkMsg": "参数必须为时间格式"
        }
      ]
    },
    {
      "name": "toSecond",
      "function": "TO_NUMBER(TO_CHAR(#1, 'SS'))",
      "describe": "秒",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "datetime;timestamp;time;string",
          "checkMsg": "参数必须为时间格式"
        }
      ]
    },
    {
      "name": "formatDate_Y_M",
      "function": "TO_CHAR(#1,'yyyy-MM')",
      "describe": "年月",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": [
        {
          "checkRegexType": "datetime;timestamp;date;string",
          "checkMsg": "参数必须为日期格式"
        }
      ]
    },
    {
      "name": "weighted_mean",
      "function": "CASE WHEN SUM(#2) = 0 THEN null ELSE SUM(#1*#2)/SUM(#2) END",
      "describe": "加权平均",
      "paramSizeType": "fixed",
      "paramMinSize": 2,
      "paramMaxSize": 2,
      "params": [
        {
          "checkRegexType": "number",
          "checkMsg": "参数必须为数字"
        },
        {
          "checkRegexType": "number",
          "checkMsg": "参数必须为数字"
        }
      ]
    },
    {
      "name": "median",
      "function": "MEDIAN(#1)",
      "describe": "中位数",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": []
    },
    {
      "name": "stddev_samp",
      "function": "STDDEV_SAMP(#1)",
      "describe": "标准差",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": []
    },
    {
      "name": "var_samp",
      "function": "VAR_SAMP(#1)",
      "describe": "方差",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": []
    },
    {
      "name": "count_any",
      "function": "COUNT(1)",
      "describe": "计算所有",
      "paramSizeType": "fixed",
      "paramMinSize": 0,
      "paramMaxSize": 0,
      "params": []
    },
    {
      "name": "percentage_num",
      "function": "REPLACE(#1,'%','')/100",
      "describe": "百分比转数值",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": []
    },
    {
      "name": "num_percentage",
      "function": "concat(#1*100,'%') ",
      "describe": "数字转百分比",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": []
    },
    {
      "name": "mul_polym",
      "function": "case when min(abs(#1)) = 0 then 0 ELSE EXP(SUM(Log(EXP(1),abs(nullif(#1 ,0)))))*ROUND(0.5-MOD(count(nullif(sign(sign(#1)+0.5),1)),2),0) end",
      "describe": "乘积聚合",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": []
    },
    {
      "name": "quantile",
      "function": "PERCENTILE_CONT(#2) within group(order by #1)",
      "describe": "分位数",
      "paramSizeType": "fixed",
      "paramMinSize": 2,
      "paramMaxSize": 2,
      "params": []
    },
    {
      "name": "four_quantile",
      "function": "PERCENTILE_CONT(#2) within group(order by #1)",
      "describe": "四分位数",
      "paramSizeType": "fixed",
      "paramMinSize": 2,
      "paramMaxSize": 2,
      "params": []
    },
    {
      "name": "standard_error",
      "function": "STDDEV_SAMP(#1)/SQRT(count(1))",
      "describe": "标准误差",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": []
    },
    {
      "name": "stddev_pop",
      "function": "STDDEV_POP(#1)",
      "describe": "总体标准差",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": []
    },
    {
      "name": "var_pop",
      "function": "VAR_POP(#1)",
      "describe": "总体方差",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": []
    },
    {
      "name": "covar_pop",
      "function": "covar_pop(#1,#2)",
      "describe": "协方差",
      "paramSizeType": "fixed",
      "paramMinSize": 2,
      "paramMaxSize": 2,
      "params": []
    },
    {
      "name": "correlation_coefficient",
      "function": "CASE WHEN STDDEV_POP(#1) = 0 OR STDDEV_POP(#2)= 0 THEN NULL ELSE COVAR_POP(#1 ,#2)/(STDDEV_POP(#1)*STDDEV_POP(#2)) END",
      "describe": "相关系数",
      "paramSizeType": "fixed",
      "paramMinSize": 2,
      "paramMaxSize": 2,
      "params": []
    },
    {
      "name": "sum_squares",
      "function": "sum(POWER(#1,2))",
      "describe": "平方和",
      "paramSizeType": "fixed",
      "paramMinSize": 1,
      "paramMaxSize": 1,
      "params": []
    },
    {
      "name": "sum_weight",
      "function": "sum(#1*#2)",
      "describe": "权重和",
      "paramSizeType": "fixed",
      "paramMinSize": 2,
      "paramMaxSize": 2,
      "params": []
    }
  ]
}